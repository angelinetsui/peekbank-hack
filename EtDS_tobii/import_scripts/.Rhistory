rm(list=ls())
dir_raw <- "../raw_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
dframe_raw <- read.table(file = file_raw,
sep = '\t',
header = TRUE)
getwd(0)
getwd()
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii")
dframe_raw <- read.table(file = file_raw,
sep = '\t',
header = TRUE)
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import")
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
dframe_raw <- read.table(file = file_raw,
sep = '\t',
header = TRUE)
View(dframe_raw)
View(dframe_raw)
a <- colnames(dframe_raw)
print()
print(A)
print(a)
head(dframe_raw)
df_header <- read.csv(file=, header=TRUE, sep=",")
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
View(df_header)
View(df_header)
colnames_raw <- colnames(df_raw)
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
colnames_fetch <- df_raw["xy_data_tobii"]
colnames_fetch <- df_header["xy_data_tobii"]
View(colnames_fetch)
View(colnames_fetch)
colnames_xy <- df_header["xy_data_save"]
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
colnames_fetch <- df_header["xy_data_tobii"]
colnames_xy <- df_header["xy_data_save"]
df_xy <- data.frame(matrix(ncol = length(colnames_xy),
nrow = nrow(dframe_raw)))
df_xy <- data.frame(matrix(ncol = length(colnames_xy),
nrow = nrow(df_raw)))
colnames(df_xy) <- colnames_xy
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i,1] %in% colnames_raw) {
df_xy[i] = df_raw[colnames_fetch[i,1]]
} else {
cat(colnames_fetch[i,1], "does not exist in the raw data file\n")
}
}
colnames_fetch[i,1]
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i,1] %in% colnames_raw) {
df_xy[i] = df_raw[colnames_fetch[i,1]]
} else {
cat(colnames_fetch[i,1], "does not exist in the raw data file", file_raw, "\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i,1] %in% colnames_raw) {
print(colnames_fetch[i,1])
df_xy[i] = df_raw[colnames_fetch[i,1]]
} else {
cat(colnames_fetch[i,1], "does not exist in the raw data file", file_raw, "\n")
}
}
length(colnames_fetch)
nrow(colnames_fetch)
colnames_fetch <- df_header[, "xy_data_tobii"]
colnames_fetch
print(colnames_fetch)
colnames_fetch[i]
colnames_fetch[1]
colnames_fetch[2]
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
colnames_fetch <- df_header[, "xy_data_tobii"]
colnames_xy <- df_header[, "xy_data_save"]
length(colnames_xy)
df_xy <- data.frame(matrix(ncol = length(colnames_xy),
nrow = nrow(df_raw)))
View(df_xy)
View(df_xy)
colnames(df_xy) <- colnames_xy
View(df_xy)
View(df_xy)
rm(list=ls())
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
colnames_fetch <- df_header[, "xy_data_tobii"]
colnames_xy <- df_header[, "xy_data_save"]
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
## STEP 0. read in column names
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
## STEP 1. tobii_to_xy()
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
## search through raw data table and find desired columns,
## if they did not exist, then just create an empty column with NA values
colnames_raw <- colnames(df_raw)
colnames_fetch <- df_header[, "xy_data_tobii"]
colnames_xy <- df_header[, "xy_data_save"]
df_xy <- data.frame(matrix(ncol = length(colnames_xy),
nrow = nrow(df_raw)))
colnames(df_xy) <- colnames_xy
for (i in 1:nrow(colnames_fetch)) {
if (colnames_fetch[i,1] %in% colnames_raw) {
print(colnames_fetch[i,1])
df_xy[i] = df_raw[colnames_fetch[i,1]]
} else {
cat(colnames_fetch[i,1], "does not exist in the raw data file", file_raw, "\n")
}
}
colnames_fetch
length(colnames_fetch)
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[1] %in% colnames_raw) {
print(colnames_fetch[1])
df_xy[i] = df_raw[colnames_fetch[1]]
} else {
cat(colnames_fetch[1], "does not exist in the raw data file", file_raw, "\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
print(colnames_fetch[i])
df_xy[, i] = df_raw[, colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[, i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
colnames_fetch
colnames_fetch[i]
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[colnames_xy[i]] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[colnames_xy[i]] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
colnames_xy[i]
df_xy[colnames_xy[i]]
colnames_xy[i]
print(colnames_xy[i])
colnames_fetch <- c(df_header[, "xy_data_tobii"])
colnames_fetch <- df_header[[ "xy_data_tobii"]]
class(colnames_fetch
)
colnames_fetch
colnames_fetch <- as.vector(df_header[[ "xy_data_tobii"]])
class(colnames_fetch )
colnames_fetch
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[colnames_xy[i]] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
dir_save
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(dframe_xy, file.path(dir_save, "xy_data.csv"))
write.csv(df_xy, file.path(dir_save, "xy_data.csv"))
" tobii_to_xy()
"
colnames_fetch <- as.vector(df_header[[ "aoi_data_tobii"]])
colnames_aoi <- as.vector(df_header[["aoi_data_save"]])
## create new aoi table
df_aoi <- data.frame(matrix(ncol = length(colnames_aoi),
nrow = nrow(df_raw)))
colnames(df_aoi) <- colnames_aoi
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_aoi[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write xy table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_aoi, file.path(dir_save, "aoi_data.csv"))
View(df_raw)
View(df_aoi)
View(df_aoi)
colnames_fetch
colnames_fetch[colnames_fetch != ""]
colnames_fetch <- as.vector(df_header[[ "aoi_data_tobii"]])
colnames_fetch <- colnames_fetch[colnames_fetch != ""]
colnames_aoi <- as.vector(df_header[["aoi_data_save"]])
colnames_aoi <- colnames_aoi[colnames_aoi != ""]
df_aoi <- data.frame(matrix(ncol = length(colnames_aoi),
nrow = nrow(df_raw)))
colnames(df_aoi) <- colnames_aoi
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_aoi[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write xy table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_aoi, file.path(dir_save, "aoi_data.csv"))
## This is the hack start script for reading raw eye tracking data
## by Linger Xu -- txu@indiana.edu | linger.xt@gmail.com
## date 08/19/2019
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
## STEP 0. read in raw datafiles and the column names
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
###############################
## FUNCTION 1 -- tobii_to_xy()
###############################
## search through raw data table and find desired columns,
## if they did not exist, then just create an empty column with NA values
colnames_fetch <- as.vector(df_header[[ "xy_data_tobii"]])
colnames_xy <- as.vector(df_header[["xy_data_save"]])
## create new xy table
df_xy <- data.frame(matrix(ncol = length(colnames_xy),
nrow = nrow(df_raw)))
colnames(df_xy) <- colnames_xy
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_xy[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write xy table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_xy, file.path(dir_save, "xy_data.csv"), row.names=FALSE)
###############################
## FUNCTION 2 -- tobii_to_aoi()
###############################
colnames_fetch <- as.vector(df_header[[ "aoi_data_tobii"]])
colnames_fetch <- colnames_fetch[colnames_fetch != ""]
colnames_aoi <- as.vector(df_header[["aoi_data_save"]])
colnames_aoi <- colnames_aoi[colnames_aoi != ""]
## create new aoi table
df_aoi <- data.frame(matrix(ncol = length(colnames_aoi),
nrow = nrow(df_raw)))
colnames(df_aoi) <- colnames_aoi
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_aoi[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write xy table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_aoi, file.path(dir_save, "aoi_data.csv"), row.names=FALSE)
module <- "xy"
colnames_fetch <- as.vector(df_header[[paste(module, "_data_tobii")]])
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
module <- "xy"
colnames_fetch <- as.vector(df_header[[paste(module, "_data_tobii")]])
colnames_save <- as.vector(df_header[[paste(module, "_data_save")]])
paste(module, "_data_tobii")
colnames_fetch <- as.vector(
df_header[[
paste(module, "_data_tobii", sep="")]])
colnames_save <- as.vector(
df_header[[
paste(module, "_data_save", sep="")]])
df_save <- data.frame(
matrix(
ncol = length(colnames_save), nrow = nrow(df_raw)))
colnames(df_save) <- colnames_save
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_save[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
View(df_save)
View(df_save)
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_save, file.path(dir_save, cat(module, "_data.csv")), row.names=FALSE)
write.csv(df_save, file.path(
dir_save, cat(module, "_data.csv", sep="")), row.names=FALSE)
file.path(
dir_save, cat(module, "_data.csv", sep=""))
cat(module, "_data.csv", sep="")
file.path(
dir_save, cat(module, "_data.csv", sep=""))
file.path(
dir_save, paste(module, "_data.csv", sep=""))
write.csv(df_save, file.path(
dir_save, paste(module, "_data.csv", sep="")), row.names=FALSE)
rm(list=ls())
raw_to_processed(module = "xy")
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
raw_to_processed <- function(module) {
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
## STEP 0. read in raw datafiles and the column names
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
## search through raw data table and find desired columns,
## if they did not exist, then just create an empty column with NA values
colnames_fetch <- as.vector(
df_header[[
paste(module, "_data_tobii", sep="")]])
colnames_save <- as.vector(
df_header[[
paste(module, "_data_save", sep="")]])
## create new data table
df_save <- data.frame(
matrix(
ncol = length(colnames_save), nrow = nrow(df_raw)))
colnames(df_save) <- colnames_save
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_save[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write new data table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_save, file.path(
dir_save, paste(module, "_data.csv", sep="")), row.names=FALSE)
return(dir_save)
}
rm(list=ls())
raw_to_processed(module = "xy")
rm(list=ls())
raw_to_processed <- function(module) {
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
## STEP 0. read in raw datafiles and the column names
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
## search through raw data table and find desired columns,
## if they did not exist, then just create an empty column with NA values
colnames_fetch <- as.vector(
df_header[[
paste(module, "_data_tobii", sep="")]])
colnames_save <- as.vector(
df_header[[
paste(module, "_data_save", sep="")]])
## create new data table
df_save <- data.frame(
matrix(
ncol = length(colnames_save), nrow = nrow(df_raw)))
colnames(df_save) <- colnames_save
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_save[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write new data table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_save, file.path(
dir_save, paste(module, "_data.csv", sep="")), row.names=FALSE)
return(dir_save)
}
raw_to_processed(module = "xy")
raw_to_processed(module = "aoi")
setwd("C:/Dropbox/_codes/peekbank-hack/EtDS_tobii/import_scripts")
rm(list=ls())
raw_to_processed <- function(module) {
dir_raw <- "../raw_data"
dir_save <- "../processed_data"
file_raw <- file.path(dir_raw, "tobii-sample.tsv")
file_header <- "import_header.csv"
## STEP 0. read in raw datafiles and the column names
df_header <- read.csv(file=file_header, header=TRUE, sep=",")
df_raw <- read.table(file = file_raw, sep = '\t', header = TRUE)
colnames_raw <- colnames(df_raw)
## search through raw data table and find desired columns,
## if they did not exist, then just create an empty column with NA values
colnames_fetch <- as.vector(
df_header[[
paste(module, "_tobii", sep="")]])
colnames_save <- as.vector(
df_header[[
paste(module, "_save", sep="")]])
## create new data table
df_save <- data.frame(
matrix(
ncol = length(colnames_save), nrow = nrow(df_raw)))
colnames(df_save) <- colnames_save
for (i in 1:length(colnames_fetch)) {
if (colnames_fetch[i] %in% colnames_raw) {
df_save[i] = df_raw[colnames_fetch[i]]
} else {
cat(colnames_fetch[i], "does not exist in the raw data file", file_raw, "\n")
}
}
## write new data table as csv file
if (!file.exists(dir_save)) {
dir.create(dir_save)
}
write.csv(df_save, file.path(
dir_save, paste(module, ".csv", sep="")), row.names=FALSE)
return(dir_save)
}
raw_to_processed(module = "xy_data")
raw_to_processed(module = "aoi_data")
